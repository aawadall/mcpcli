name: Go Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.7'

      - name: Download dependencies
        run: go mod download

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out
      - name: Convert coverage to LCOV
        uses: jandelgado/gcov2lcov-action@v1.1.1
        with:
          infile: coverage.out
          outfile: coverage.lcov

      - name: Codacy coverage reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.lcov
      - name: Ensure coverage
        run: |
          pct=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "total coverage: $pct%"
          if [ $(echo "$pct 85" | awk '{print ($1 < $2)}') -eq 1 ]; then exit 1; fi
